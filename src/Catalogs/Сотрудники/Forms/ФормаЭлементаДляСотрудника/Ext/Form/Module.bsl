#Область ОбработчикиСобытий
&НаКлиенте
Процедура КнопкаСохранитьИзменения(Команда)
	Записать();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСохранитьИЗакрыть(Команда)
	Записать();
	Закрыть();
КонецПроцедуры

&НаСервере
Функция ПолучитьИнициалыНаСервере(ПолноеИмя)
	Возврат ОбщиеФункцииПроцедуры.ПолучитьФиоСИнициалами(Объект.ПолноеИмя);	
КонецФункции

&НаКлиенте
Процедура ПолноеИмяПриИзменении(Элемент)
	Объект.Наименование = ПолучитьИнициалыНаСервере(Объект.ПолноеИмя);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если ЭтоАдресВременногоХранилища(СсылкаНаКартинку)  Тогда 
		ФайлКартинки = ПолучитьИзВременногоХранилища(СсылкаНаКартинку); 
		
		ТекущийОбъект.Фотография = Новый ХранилищеЗначения(ФайлКартинки); 
		
		УдалитьИзВременногоХранилища(СсылкаНаКартинку); 
		
		СсылкаНаКартинку = ПолучитьНавигационнуюСсылку(Объект.Ссылка,"Фотография");
	КонецЕсли;
КонецПроцедуры

#Область ОграничениеДоступа
&НаСервере
Функция ПользовательИмеетДоступКЭтойЗаписи()
	Если УправлениеУчетнымиЗаписями.ЭтоАдминистратор(ПараметрыСеанса.ИмяПользователя) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Не ПараметрыСеанса.ИмяПользователя = Объект.ИмяПользователя Тогда                 
		Сообщить("Вы не можете формировать и подписывать документы за других пользователей.");
		Возврат Ложь;	
	КонецЕсли;
	
	Возврат Истина;
КонецФункции
#КонецОбласти

&НаСервере
Процедура ОбновитьСсылки()
	Если Не СсылкаСуществует(Объект.СогласиеНаОбработкуПД) Тогда
		Объект.СогласиеНаОбработкуПД = Документы.СогласиеНаОбработкуПерсональныхДанных.ПустаяСсылка();
	КонецЕсли;
	
	Если Не СсылкаСуществует(Объект.ОбязательствоСоблюденияРКПД) Тогда
		Объект.ОбязательствоСоблюденияРКПД = Документы.ОбязательствоСоблюденияРКПД.ПустаяСсылка();
	КонецЕсли;
	
	Если Не СсылкаСуществует(Объект.ДолжностнаяИнструкция) Тогда
		Объект.ДолжностнаяИнструкция = Документы.ДолжностнаяИнструкция.ПустаяСсылка();	
	КонецЕсли;

	Если Не СсылкаСуществует(Объект.ТрудовойДоговор) Тогда
		Объект.ТрудовойДоговор = Документы.ТрудовойДоговор.ПустаяСсылка();	
	КонецЕсли;
	
	Если Не СсылкаСуществует(Объект.ПриказОПриеме) Тогда
		Объект.ПриказОПриеме = Документы.Приказ.ПустаяСсылка();	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	СсылкаНаКартинку = ПолучитьНавигационнуюСсылку(Объект.Ссылка,"Фотография");
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)		
	ПриОткрытииНаСервере();
	ОбновитьСсылки();
	ОбновитьДоступностьГиперссылок();
КонецПроцедуры

#Область РаботаСФотографией
&НаКлиенте
Процедура ФотоГиперссылкаНажатие(Элемент)
	Режим = РежимДиалогаВыбораФайла.Открытие;
	
	ДиалогОткрытия = Новый ДиалогВыбораФайла(Режим); 
	ДиалогОткрытия.ПолноеИмяФайла = ""; 
	
	Фильтр = "Файл Jpg (*.jpg)|*.jpg"; 
	
	ДиалогОткрытия.Фильтр = Фильтр; 
	ДиалогОткрытия.МножественныйВыбор = Ложь; 
	ДиалогОткрытия.Заголовок = "Выберете файл для загрузки"; 
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеЗагрузкиФайла",ЭтаФорма); 
	
	ДиалогОткрытия.Показать(ОписаниеОповещения);	
КонецПроцедуры       

&НаКлиенте
Процедура ПослеЗагрузкиФайла(ВыбранныйФайл, ДополнительныйПараметр) Экспорт
	Если ВыбранныйФайл = Неопределено Тогда 
		Возврат; 
	КонецЕсли;     
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПослеПомещенияФайла", ЭтаФорма); 
	НачатьПомещениеФайла(ОписаниеОповещения,, ВыбранныйФайл[0], Ложь, УникальныйИдентификатор); 
КонецПроцедуры                                              

&НаКлиенте
Процедура ПослеПомещенияФайла(Результат, Адрес, ВыбранноеИмяФайла, ДопнительныеПараметры) Экспорт
	Если Не Результат Тогда 
		Возврат; 
	КонецЕсли; 
	
	СсылкаНаКартинку = Адрес; 
	Модифицированность = Истина; 
КонецПроцедуры
#КонецОбласти              

&НаСервере
Функция ПолучитьСсылкуНаАкадемЭтику()
	Возврат Константы.СсылкаНаАкадемическуюЭтику.Получить();
КонецФункции

&НаКлиенте
Процедура ДекорацияАкадемЭтикаСсылкаНажатие(Элемент)
	ЗапуститьПриложение(ПолучитьСсылкуНаАкадемЭтику());
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.УченаяСтепень <> ПредопределенноеЗначение("Перечисление.УченаяСтепень.Нет")
	   И Объект.НомерДокументаСтепени = "" Тогда
		ПоказатьПредупреждение( , "Вы не указали номер документа о присвоении ученой степени.",
								, "Вы кое-что забыли!");
		Объект.Заполнен = Ложь;						
		Отказ = Истина;
		Возврат;
	КонецЕсли;  
	
	Если Объект.УченоеЗвание <> ПредопределенноеЗначение("Перечисление.УченоеЗвание.Нет")
	   И Объект.НомерДокументаОПрисвоенииЗвания = "" Тогда
		ПоказатьПредупреждение( , "Вы не указали номер документа о присвоении ученого звания.",
								, "Вы кое-что забыли!");
		Объект.Заполнен = Ложь;						
		Отказ = Истина;
		Возврат;
	КонецЕсли;  
	
	
	Если Не Объект.АкадемЭтикаОзнакомлен Тогда
		ПоказатьПредупреждение( , "Вы не ознакомились с академической этикой Горного университета (вкладка 'Научная деятельность').", 
								, "Вы кое-что забыли!");  
		Объект.Заполнен = Ложь;						
		Отказ = Истина; 
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СсылкаСуществует(Ссылка)
	Возврат Не Ссылка.Пустая() И Не Ссылка.ПолучитьОбъект() = Неопределено;
КонецФункции

&НаСервере
Процедура ОбновитьДоступностьГиперссылок()
	Элементы.СформироватьСогласие.Доступность              = Не СсылкаСуществует(Объект.СогласиеНаОбработкуПД)
														 Или Не Объект.СогласиеНаОбработкуПД.Подписан;	
														 
	Элементы.СформироватьОбязательство.Доступность         = Не СсылкаСуществует(Объект.ОбязательствоСоблюденияРКПД)
														 Или Не Объект.ОбязательствоСоблюденияРКПД.Подписан;
														 
	Элементы.СформироватьДолжностнуюИнструкцию.Доступность = Не СсылкаСуществует(Объект.ДолжностнаяИнструкция)
														 Или Не Объект.ДолжностнаяИнструкция.Подписан;
														 
	Элементы.ПосмотретьДоговор.Доступность                 =    СсылкаСуществует(Объект.ТрудовойДоговор) 
														   И Не Объект.ТрудовойДоговор.Подписан;
КонецПроцедуры

#Область СформироватьДокумент
&НаКлиенте
Функция ПолучитьПараметрыФормы(СсылкаНаДокумент)

КонецФункции

&НаКлиенте
Функция Заполнен()
	Если Не Объект.Заполнен Тогда
		Сообщить("Вы не заполнили данные до конца. Проверьте, пожалуйста, все ли обязательные поля содержат данные.");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура СформироватьСогласиеНажатие(Элемент)
	Если Не ПользовательИмеетДоступКЭтойЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	Если Не Заполнен() Тогда
		Возврат;
	КонецЕсли;
	
    СсылкаНаДокумент = Объект.СогласиеНаОбработкуПД;
	
	Если СсылкаСуществует(СсылкаНаДокумент) Тогда
		ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);	
	Иначе
		ПараметрыФормы = Новый Структура("СубъектПерсональныхДанных", Объект.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Документ.СогласиеНаОбработкуПерсональныхДанных.Форма.ФормаДокументаДляСотрудника", ПараметрыФормы);
	ОбновитьДоступностьГиперссылок();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьОбязательствоНажатие(Элемент)  
	Если Не ПользовательИмеетДоступКЭтойЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	Если Не Заполнен() Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = Объект.ОбязательствоСоблюденияРКПД;
	
	Если СсылкаСуществует(СсылкаНаДокумент) Тогда
		ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);	
	Иначе
		ПараметрыФормы = Новый Структура("Подписант", Объект.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ОбязательствоСоблюденияРКПД.Форма.ФормаДокументаДляСотрудника", ПараметрыФормы);
	ОбновитьДоступностьГиперссылок();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДолжностнуюИнструкциюНажатие(Элемент)
	Если Не ПользовательИмеетДоступКЭтойЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
    Если Не Заполнен() Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаДокумент = Объект.ДолжностнаяИнструкция;
	
	Если СсылкаСуществует(СсылкаНаДокумент) Тогда
		ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);	
	Иначе
		ПараметрыФормы = Новый Структура("Подписант", Объект.Ссылка);
	КонецЕсли;
	
	ОткрытьФорму("Документ.ДолжностнаяИнструкция.Форма.ФормаДокументаДляСотрудника", ПараметрыФормы);
	ОбновитьДоступностьГиперссылок();
	Закрыть();
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ПосмотретьДоговорНажатие(Элемент)
	Если Не ПользовательИмеетДоступКЭтойЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	СсылкаНаДокумент = Объект.ТрудовойДоговор;
	
	Если Не СсылкаСуществует(СсылкаНаДокумент) Тогда
		Возврат;
	КонецЕсли;
		
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);
	ОткрытьФорму("Документ.ТрудовойДоговор.Форма.ФормаДокументаДляСотрудника", ПараметрыФормы);
	ОбновитьДоступностьГиперссылок();
	
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ПосмотретьПриказНажатие(Элемент)
	Если Не ПользовательИмеетДоступКЭтойЗаписи() Тогда
		Возврат;
	КонецЕсли;
	
	Записать();
	СсылкаНаДокумент = Объект.ПриказОПриеме;
	
	Если Не СсылкаСуществует(СсылкаНаДокумент) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("Ключ", СсылкаНаДокумент);
	ОткрытьФорму("Документ.Приказ.Форма.ФормаДокументаДляСотрудника", ПараметрыФормы);
	ОбновитьДоступностьГиперссылок();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаОбновить(Команда)  
	ОбновитьСсылки();
	ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	Объект.Заполнен = Истина;
КонецПроцедуры

#КонецОбласти