&НаСервере
Функция ПользовательУдален() Экспорт
	Пользователь = ПользователиИнформационнойБазы.ТекущийПользователь();
	НайденныйПользователь = Справочники.ПользователиСистемы.НайтиПоНаименованию(Пользователь.Имя);
	
	Возврат НайденныйПользователь.ПометкаУдаления;
КонецФункции

&НаСервере
Процедура СоздатьНовогоПользователя(Имя, ПолноеИмя, Пароль, РолиСписок) Экспорт
	Пользователь = ПользователиИнформационнойБазы.СоздатьПользователя();
	
	Пользователь.Имя = Имя;
	Пользователь.ПолноеИмя = ПолноеИмя;
	
	Мета = Метаданные.Роли; 
	
	Для Каждого Роль Из РолиСписок Цикл
		Пользователь.Роли.Добавить(Мета.Найти(Роль));	
	КонецЦикла;
	
	Пользователь.Записать();
КонецПроцедуры 

&НаСервере
Функция ПользовательСуществует(Имя) Экспорт
	Попытка
		Если Не ПользователиИнформационнойБазы.НайтиПоИмени(Имя) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
		Возврат Ложь;
	Исключение
		Возврат Ложь;
	КонецПопытки;
КонецФункции

&НаСервере
Функция ЭтоАдминистратор(Имя) Экспорт
	РольАдминистратора = Метаданные.Роли.Найти("Администратор");
	Если ПользователиИнформационнойБазы.НайтиПоИмени(Имя).Роли.Содержит(РольАдминистратора) Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервере
Функция Транслит(Вход) Экспорт
    Коды = Новый Соответствие;
    Коды.Вставить("ё","yo");
    Коды.Вставить("Ё","Yo");
    Нач = КодСимвола("А");
    Англ = "A" "B" "V" "G" "D" "E" "Zh" "Z" "I" "Y" "K" "L" "M" "N" "O" "P" "R" "S" "T" "U" "F" "Kh" "Ts" "Ch" "Sh" "Shch" "" "Y" "" "E" "Yu" "Ya" "a" "b" "v" "g" "d" "e" "zh" "z" "i" "y" "k" "l" "m" "n" "o" "p" "r" "s" "t" "u" "f" "kh" "ts" "ch" "sh" "shch" "" "y" "" "e" "yu" "ya";
    Для К = Нач по КодСимвола("я") Цикл
        Коды.Вставить(Символ(К), СтрПолучитьСтроку(Англ, К - Нач + 1));
    КонецЦикла;
    Выход = "";
    Для К=1 по СтрДлина(Вход) Цикл
        Бкв = Сред(Вход,К,1);
        Зн = Коды.Получить(Бкв);
        Выход = Выход + ?(Зн = Неопределено, Бкв, Зн);
    КонецЦикла;
    Возврат Выход;
КонецФункции

&НаСервере
Функция СформироватьИмяУчетнойЗаписи(ПолноеИмя) Экспорт
	Если ПолноеИмя = "" Тогда
		Возврат "";
	КонецЕсли;
		
	ЧистоеИмя = СокрЛП(ПолноеИмя);
	Подстроки = СтрРазделить(ЧистоеИмя, " ");
	
	ГСЧ = Новый ГенераторСлучайныхЧисел;
	Номер = ГСЧ.СлучайноеЧисло(1000, 10000);
	
	НовоеИмя = Транслит(Подстроки.Получить(0));
	Для Инд = 1 По Подстроки.Количество() - 1 Цикл
		НовоеИмя = НовоеИмя + Транслит(Лев(Подстроки.Получить(Инд), 1));
	КонецЦикла;
	
	НовоеИмя = НовоеИмя + Формат(Номер, "ЧГ=");
	
	Если УправлениеУчетнымиЗаписями.ПользовательСуществует(НовоеИмя) Тогда
		Возврат СформироватьИмяУчетнойЗаписи(ПолноеИмя);
	КонецЕсли;
	
	Возврат НовоеИмя;
КонецФункции

&НаСервере
Функция ИмяТекущегоПользователя() Экспорт
	Возврат ПараметрыСеанса.ИмяПользователя;	
КонецФункции

&НаСервере
Функция ПолучитьСотрудника(Имя)
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Сотрудники.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.Сотрудники КАК Сотрудники
	|ГДЕ
	|	Сотрудники.ИмяПользователя ПОДОБНО &ИмяПользователя";
	
	Запрос.УстановитьПараметр("ИмяПользователя", Имя);
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Не Результат.Следующий() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СотрудникСсылка = Результат.Получить(0);
	Возврат СотрудникСсылка;	
КонецФункции