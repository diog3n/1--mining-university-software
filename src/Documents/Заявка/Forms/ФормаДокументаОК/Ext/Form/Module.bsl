#Область ОбработчикиСобытий
&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	#Область СозданиеДокументаАвторекомендаци
	РежимЗаписи     = РежимЗаписиДокумента.Запись;
	
	Авторекомендация = Документы.Авторекомендация.СоздатьДокумент();
	Авторекомендация.Дата = ТекущийОбъект.Дата;
	Авторекомендация.Заявка = ТекущийОбъект.Ссылка;
	
	ПравилоОтбора = Новый Структура("ДолжностьПоШтатномуРасписанию");
	ПравилоОтбора.ДолжностьПоШтатномуРасписанию = ТекущийОбъект.ЖелаемаяДолжность;
	ТребованияВыборка = Справочники.БазовыеТребованияКВакансии.Выбрать( , , ПравилоОтбора, );									  
		
	Если Не ТребованияВыборка.Следующий() Тогда
		Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.ТребованиеНеНайдено;
		Авторекомендация.Записать(РежимЗаписи);
		Возврат;
	КонецЕсли;	
	
	Требования = ТребованияВыборка;
    #КонецОбласти

	#Область ПроверкаЗаявкиНаСоответствиеТребованиям
	Заявка = ТекущийОбъект;
		
	// Проверка наличия послевузовского образования
	Если Заявка.ПослевузовскоеОбразование = Перечисления.ПослевузовскоеОбразование.Нет Тогда
		// Проверка стажа 
		Если Заявка.Стаж < Требования.МинимальныйСтаж Тогда
			Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.Отказать;
			Авторекомендация.Записать(РежимЗаписи);
			Возврат;
		КонецЕсли;
		
		// Вынести заключение и прекратить выполнение
		Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.Пригласить;
		Авторекомендация.Записать(РежимЗаписи);
		Возврат;	
	КонецЕсли;
	
	// Проверка минимального стажа при наличии послевузовского образования
	Если Заявка.Стаж < Требования.МинимальныйСтажПриНаличииОбразования Тогда
		Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.Отказать;
		Авторекомендация.Записать(РежимЗаписи);
		Возврат;
	КонецЕсли;
	
	// Проверка ученой степени
	ТребуемаяУченаяСтепень = ОбщиеФункцииПроцедуры.УченаяСтепеньВЧисло(Требования.МинимальнаяУченаяСтепень);
	УченаяСтепеньЗаявки    = ОбщиеФункцииПроцедуры.УченаяСтепеньВЧисло(Заявка.УченаяСтепень);
	
	Если УченаяСтепеньЗаявки < ТребуемаяУченаяСтепень Тогда
		Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.Отказать;
		Авторекомендация.Записать(РежимЗаписи);
        Возврат;
	КонецЕсли;
	
	Авторекомендация.ЗаключениеАвтопроверки = Перечисления.ЗаключениеАвтопроверки.Пригласить;  
	#КонецОбласти
	
	
	Авторекомендация.Записать(РежимЗаписи);
КонецПроцедуры             

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	// Pass		  
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
КонецПроцедуры                        

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Объект.Проведен Тогда
		Отказ = Истина;
		ПоказатьПредупреждение( , "Вы уже отправили заявку. Не переживайте мы ее рассматриваем!", 
								, "Повторная отправка заявки");   
		Возврат;	
	КонецЕсли;
	
	Если Объект.Образование.Количество() = 0 Тогда
		Отказ = Истина;
		ПоказатьПредупреждение( , "Укажите, пожалуйста, информацию об образовании.
								  |Сделать это можно на странице '" 
								+ Элементы.ГруппаОбразованиеИНачунаяДеятельность.Заголовок
								+ "' Спасибо!", 
								, "Вы кое-что забыли!");
		Возврат;
	КонецЕсли;
	
	Если Объект.СписокМестРаботы.Количество() = 0 Тогда
		Отказ = Истина;
		ПоказатьПредупреждение( , "Укажите, пожалуйста, информацию о местах работы.
								  |Сделать это можно на странице '" 
								+ Элементы.ГруппаОбразованиеИНачунаяДеятельность.Заголовок
								+ "' Спасибо!", 
								, "Вы кое-что забыли!");
		Возврат;
	КонецЕсли;

	Если Объект.СогласиеНаОбработкуПД = Ложь Тогда
		Отказ = Истина;
		ПоказатьПредупреждение( , "Для подачи заявки необходимо дать согласие на обработку персональных данных.
								  |Сделать это можно на странице 'Формальности'. Спасибо!", 
								, "Вы кое-что забыли!");
		Возврат;
	КонецЕсли;
КонецПроцедуры

#Область БлокировкаФормыПослеПроведения
&НаСервере
Процедура ПроверитьВозможностьРедактирования()
	Если РедактированиеЗапрещено() Тогда
    	ЭтаФорма.ТолькоПросмотр = Истина;
	КонецЕсли;
КонецПроцедуры // ЗаблокироватьОбъект()

&НаСервере
Функция РедактированиеЗапрещено()
	Возврат Объект.Проведен И Константы.ЗапретНаРедактированиеДокументов.Получить();
КонецФункции

&НаСервере
Процедура ПриОткрытииНаСервере()
	ПроверитьВозможностьРедактирования();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры
#КонецОбласти

#КонецОбласти

