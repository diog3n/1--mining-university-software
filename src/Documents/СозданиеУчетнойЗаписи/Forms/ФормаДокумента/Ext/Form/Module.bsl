#Область ОбработчикиСобытий
&НаКлиенте
Процедура КнопкаСоздатьИЗакрыть(Команда)
	ПровестиДокумент();
	Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура КнопкаСоздать(Команда)
	ПровестиДокумент();
КонецПроцедуры

&НаСервере
Функция ПользовательСТакимИменемСуществует()
	Возврат УправлениеУчетнымиЗаписями.ПользовательСуществует(Объект.ИмяПользователя);
КонецФункции

&НаКлиенте
Процедура ПровестиДокумент()
	ПараметрыЗаписи = Новый Структура("РежимЗаписи, Закрыть", РежимЗаписиДокумента.Проведение, Ложь); 
	Если ПользовательСТакимИменемСуществует() Тогда
		Объект.ПометкаУдаления = Истина;
		ПоказатьПредупреждение( , "Пользователь с таким именем уже существует",
								, "Ошибка создания пользователя");
		Возврат;
	КонецЕсли;
	
	Записать(ПараметрыЗаписи);
КонецПроцедуры    

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Объект.Пароль = "" Тогда
		Объект.Пароль = СгенерироватьПароль(10);
	КонецЕсли;
	
	Элементы.ФормаКнопкаСоздать.Доступность         = Не Объект.Проведен;
	Элементы.ФормаКнопкаСоздатьИЗакрыть.Доступность = Не Объект.Проведен;

	
	ПриОткрытииНаСервере();	
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	Если Объект.ИмяПользователя = "" Тогда
		Объект.ИмяПользователя = УправлениеУчетнымиЗаписями
								.СформироватьИмяУчетнойЗаписи(Объект.Заявка.ПолноеИмя);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СгенерироватьПароль(Длина)
	ГСП = Новый ГенераторСлучайныхПаролей;
	Возврат ГСП.СлучайныйПароль(Длина, Истина);
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	СоздатьНовогоСотрудника(Объект.ИмяПользователя);
	
	Роли = Новый Массив;
	
	Роли.Добавить("Сотрудник");
	
	УправлениеУчетнымиЗаписями.СоздатьНовогоПользователя(
		Объект.ИмяПользователя, Объект.Заявка.ПолноеИмя, "1234567890", Роли
	);
КонецПроцедуры

&НаСервере
Процедура СоздатьНовогоСотрудника(ИмяПользователя)
	#Область СозданиеНовогоСотрудника 
	Сотрудник               = Справочники.Сотрудники.СоздатьЭлемент();
	Сотрудник.Гражданство   = Объект.Заявка.Гражданство;
	Сотрудник.ДатаРождения  = Объект.Заявка.ДатаРождения;
	Сотрудник.Должность     = Объект.Заявка.ЖелаемаяДолжность;
	Сотрудник.Пол           = Объект.Заявка.Пол;
	Сотрудник.ПолноеИмя     = Объект.Заявка.ПолноеИмя;
	Сотрудник.УченаяСтепень = Объект.Заявка.УченаяСтепень;
	Сотрудник.Наименование  = ОбщиеФункцииПроцедуры.ПолучитьФиоСИнициалами(Сотрудник.ПолноеИмя);
	Для Каждого ТекСтрокаОбразование Из Объект.Заявка.Образование Цикл
		НоваяСтрока = Сотрудник.Образование.Добавить();
		НоваяСтрока.АдресУЗ = ТекСтрокаОбразование.АдресУЗ;
		НоваяСтрока.ГодОкончанияИлиУхода = ТекСтрокаОбразование.ГодОкончанияИлиУхода;
		НоваяСтрока.ГодПоступления = ТекСтрокаОбразование.ГодПоступления;
		НоваяСтрока.КурсПриОкончанииИлиУходе = ТекСтрокаОбразование.КурсПриОкончанииИлиУходе;
		НоваяСтрока.НаименовниеУЗ = ТекСтрокаОбразование.НаименовниеУЗ;
		НоваяСтрока.НомерДипломаУдостоверения = ТекСтрокаОбразование.НомерДипломаУдостоверения;
		НоваяСтрока.СерияДипломаУдостоверения = ТекСтрокаОбразование.СерияДипломаУдостоверения;
		НоваяСтрока.Специальность = ТекСтрокаОбразование.Специальность;
		НоваяСтрока.ФакультетИлиОтделение = ТекСтрокаОбразование.ФакультетИлиОтделение;
	КонецЦикла;
	
	Для Каждого ТекСтрокаРабота Из Объект.Заявка.СписокМестРаботы Цикл
		НоваяСтрока = Сотрудник.СписокМестРаботы.Добавить();
		НоваяСтрока.АдресОрганизации = ТекСтрокаРабота.АдресОрганизации;
		НоваяСтрока.Должность = ТекСтрокаРабота.Должность;
		НоваяСтрока.МесяцИГодПоступления = ТекСтрокаРабота.МесяцИГодПоступления;
		НоваяСтрока.МесяцИГодУхода = ТекСтрокаРабота.МесяцИГодУхода;
		НоваяСтрока.НаименованиеОрганизации = ТекСтрокаРабота.НаименованиеОрганизации;
	КонецЦикла;
	
	Сотрудник.ИмяПользователя = ИмяПользователя;
    Сотрудник.Записать();
	#КонецОбласти
КонецПроцедуры    

#КонецОбласти




