#Область ПрикладныеПроцедурыИФункции
Процедура ЗаполнитьТекстом()
	Если Объект.ТекстОбязанностиПреподавателя = "" Тогда
		Элементы.ТекстОбязанностиПреподавателя.Заголовок = Константы.ОбязанностиПреподавателя.Получить();
	Иначе
		Элементы.ТекстОбязанностиПреподавателя.Заголовок = Объект.ТекстОбязанностиПреподавателя;   
	КонецЕсли;      
									  
	Если Объект.ТекстОбязанностиРаботодателя = "" Тогда
		Элементы.ТекстОбязанностиРаботодателя.Заголовок = Константы.ОбязанностиРаботодателя.Получить();
	Иначе
		Элементы.ТекстОбязанностиРаботодателя.Заголовок = Объект.ТекстОбязанностиРаботодателя;   
	КонецЕсли;   
	
	Если Объект.ТекстТрудовыеПраваПреподавателя = "" Тогда
		Элементы.ТекстТрудовыеПраваПреподавателя.Заголовок = Константы.ТрудовыеПраваПреподавателя.Получить();
	Иначе
		Элементы.ТекстТрудовыеПраваПреподавателя.Заголовок = Объект.ТекстТрудовыеПраваПреподавателя;   
	КонецЕсли;   
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекст()
	ЗаполнитьТекстом();
	Элементы.ГруппаПраваИОбязанностиСторон.Видимость = Истина;
КонецПроцедуры

&НаСервере
Процедура СкрытьТекст()
	Элементы.ГруппаПраваИОбязанностиСторон.Видимость = Ложь;
КонецПроцедуры

Процедура ОбновитьДоступностьФормы()
	ЭтаФорма.ТолькоПросмотр = Истина;
	ЭтаФорма.КоманднаяПанель.Доступность = Не Объект.Подписан;
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиСобытий

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗаполнитьТекстом();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьТекстом();
	ОбновитьДоступностьФормы();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекущийОбъект.ТекстОбязанностиПреподавателя   = Элементы.ТекстОбязанностиПреподавателя.Заголовок;
	ТекущийОбъект.ТекстОбязанностиРаботодателя    = Элементы.ТекстОбязанностиРаботодателя.Заголовок;
	ТекущийОбъект.ТекстТрудовыеПраваПреподавателя = Элементы.ТекстТрудовыеПраваПреподавателя.Заголовок;
КонецПроцедуры

&НаСервере
Функция ПодписалДолжностнуюИнструкцию()
	Возврат Не Объект.Преподаватель.ДолжностнаяИнструкция.Пустая();
КонецФункции

&НаСервере
Функция ПодписалСогласиеНаОбработкуПД()
	Возврат Не Объект.Преподаватель.СогласиеНаОбработкуПД.Пустая();
КонецФункции  

&НаСервере
Функция ПодписалОбязательствоСоблюденияРКПД()
	Возврат Не Объект.Преподаватель.ОбязательствоСоблюденияРКПД.Пустая();
КонецФункции

&НаКлиенте
Функция ДокументыПодписаны()
	Если Не ПодписалСогласиеНаОбработкуПД() Тогда
		ПоказатьПредупреждение( , "Сотрудник не подписал согласие на "
								+ "обработку персональных данных."
								, , "Ошибка формирования договора.");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ПодписалОбязательствоСоблюденияРКПД() Тогда
		ПоказатьПредупреждение( , "Сотрудник не подписал обязательство соблюдения "
								+ "режима конфиденциальности персональных данных."
								, , "Ошибка формирования договора.");
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ПодписалДолжностнуюИнструкцию() Тогда
		ПоказатьПредупреждение( , "Сотрудник не подписал должностную инструкцию. "
								, , "Ошибка формирования договора.");
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ПреподавательПриИзменении(Элемент)
	// Pass
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Отказ = Не ДокументыПодписаны();
КонецПроцедуры

&НаКлиенте
Процедура ПоставитьПодпись()
	Объект.Подписан = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПровестиДокумент()
	ПараметрыЗаписи = Новый Структура("РежимЗаписи, Закрыть", РежимЗаписиДокумента.Проведение, Ложь);
	Записать(ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура КнопкаПодписать(Команда)
	ПоставитьПодпись();
	ПровестиДокумент();
	ОбновитьДоступностьФормы();
КонецПроцедуры     

&НаКлиенте
Процедура КнопкаПодписатьИЗакрыть(Команда)
	ПоставитьПодпись();
	ПровестиДокумент();
	Закрыть();
КонецПроцедуры
#КонецОбласти